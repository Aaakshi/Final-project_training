entrypoint = "main.py"
modules = ["nodejs-20", "python-3.11"]

[nix]
channel = "stable-24_05"
packages = ["libxcrypt"]

[unitTest]
language = "python3"

[gitHubImport]
requiredFiles = [".replit", "replit.nix"]

[deployment]
run = ["python3", "main.py"]
deploymentTarget = "cloudrun"

[workflows]
runButton = "Complete IDCR System with Microservices"

[[workflows.workflow]]
name = "Run Demo"
author = 44313974
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python main.py"

[[workflows.workflow]]
name = "Start IDCR Demo"
author = 44313974
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "pkill -f \"python.*main.py\" || true"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "sleep 2"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python main.py"

[[workflows.workflow]]
name = "Run Complete IDCR Demo"
author = 44313974
mode = "parallel"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python main.py"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python Final-project_training/microservices/classification/app/main.py"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python Final-project_training/microservices/routing_engine/app/main.py"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python Final-project_training/microservices/content_analysis/app/main.py"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python Final-project_training/microservices/workflow_integration/app/main.py"

[[workflows.workflow]]
name = "Start Complete Demo"
author = 44313974
mode = "parallel"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python main.py"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python Final-project_training/microservices/classification/app/main.py"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python Final-project_training/microservices/routing_engine/app/main.py"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python Final-project_training/microservices/content_analysis/app/main.py"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python Final-project_training/microservices/workflow_integration/app/main.py"

[[workflows.workflow]]
name = "Run IDCR Frontend"
author = 44313974
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python main.py"

[[workflows.workflow]]
name = "Complete IDCR Demo"
author = 44313974
mode = "parallel"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python main.py"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python Final-project_training/microservices/classification/app/main.py"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python Final-project_training/microservices/routing_engine/app/main.py"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python Final-project_training/microservices/content_analysis/app/main.py"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python Final-project_training/microservices/workflow_integration/app/main.py"

[[workflows.workflow]]
name = "Start Frontend Only"
author = 44313974
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python main.py"

[[workflows.workflow]]
name = "Start IDCR System"
author = 44313974
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python main.py"

[[workflows.workflow]]
name = "IDCR Frontend Server"
author = 44313974
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python main.py"

[[workflows.workflow]]
name = "Complete IDCR System"
author = 44313974
mode = "parallel"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python main.py"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python Final-project_training/microservices/classification/app/main.py"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python Final-project_training/microservices/routing_engine/app/main.py"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python Final-project_training/microservices/content_analysis/app/main.py"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python Final-project_training/microservices/workflow_integration/app/main.py"

[[workflows.workflow]]
name = "Frontend Server"
author = 44313974
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python main.py"

[[workflows.workflow]]
name = "IDCR Complete System"
author = 44313974
mode = "parallel"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python main.py"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python microservices/classification/app/main.py"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python microservices/content_analysis/app/main.py"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python microservices/routing_engine/app/main.py"

[[workflows.workflow]]
name = "Complete IDCR System with Microservices"
author = 44313974
mode = "parallel"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python main.py"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python microservices/classification/app/main.py"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python microservices/content_analysis/app/main.py"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python microservices/routing_engine/app/main.py"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python microservices/routing_engine/app/main.py"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python microservices/routing_engine/app/main.py"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "cd "

[[workflows.workflow]]
name = "Start Frontend Development"
author = 44313974
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "cd frontend && npm run dev"

[[ports]]
localPort = 3000
externalPort = 80

[[ports]]
localPort = 5000
externalPort = 5000

[[ports]]
localPort = 5005
externalPort = 5173

[[ports]]
localPort = 8000
externalPort = 8000

[[ports]]
localPort = 8001
externalPort = 3000

[[ports]]
localPort = 8002
externalPort = 3001

[[ports]]
localPort = 8003
externalPort = 3002

[[ports]]
localPort = 8004
externalPort = 3003
